{"version":3,"sources":["components/_grid.scss","functions/_bem.scss","functions/_grid.scss","components/_row.scss","functions/_row.scss","components/_col.scss","functions/_col.scss","components/_text.scss","functions/_text.scss"],"names":[],"mappings":"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","file":"flexboxgrid.css","sourcesContent":["@import '../bootstrap.scss';\n\n.grid {\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  padding: 0 .5rem;\n\n  @include variant('container') {\n    margin: 0 auto;\n    max-width: 1200px;\n    width: 100%;\n  }\n\n  @include variant('no-gutters') {\n    padding: 0;\n  }\n}\n\n@include make-grids($breakpoints);\n","// An block has an element.\n@mixin has($element) {\n  &__#{$element} {\n    @content;\n  }\n}\n\n// An element has a variant.\n@mixin variant($modifier) {\n  &--#{$modifier} {\n    @content;\n  }\n}\n","// Will make a single grid.\n@mixin make-grid($breakpoint) {\n  .grid {\n    @include variant($breakpoint + '-no-gutters') {\n      margin: 0;\n    }\n  }\n}\n\n// Will make the grids.\n@mixin make-grids($breakpoints) {\n  @each $breakpoint, $width in $breakpoints {\n    @if ($width == 0) {\n      @include make-grid($breakpoint);\n    } @else {\n      @media (min-width: $width) {\n        @include make-grid($breakpoint);\n      }\n    }\n  }\n}\n\n","@import '../bootstrap.scss';\n\n.row {\n  box-sizing: border-box;\n  display: flex;\n  flex: 0 1 100%;\n  flex-direction: row;\n  flex-wrap: wrap;\n  list-style: none;\n  margin: -1rem -.5rem 1rem -.5rem;\n  padding: 0;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  @include variant('no-gutters') {\n    margin: 0;\n  }\n\n  @include variant('top') {\n    align-items: flex-start;\n  }\n\n  @include variant('center') {\n    align-items: center;\n  }\n\n  @include variant('bottom') {\n    align-items: flex-end;\n  }\n\n  @include variant('reverse') {\n    flex-direction: row-reverse;\n  }\n}\n\n@include make-rows($breakpoints);\n","// Will make a single grid row.\n@mixin make-row($breakpoint) {\n  .row {\n    @include variant($breakpoint + '-no-gutters') {\n      margin: 0;\n    }\n\n    @include variant($breakpoint + '-top') {\n      align-items: flex-start;\n    }\n\n    @include variant($breakpoint + '-center') {\n      align-items: center;\n    }\n\n    @include variant($breakpoint + '-bottom') {\n      align-items: flex-end;\n    }\n\n    @include variant($breakpoint + '-reverse') {\n      flex-direction: row-reverse;\n    }\n  }\n}\n\n// Will make the grid rows.\n@mixin make-rows($breakpoints) {\n  @each $breakpoint, $width in $breakpoints {\n    @if ($width == 0) {\n      @include make-row($breakpoint);\n    } @else {\n      @media (min-width: $width) {\n        @include make-row($breakpoint);\n      }\n    }\n  }\n}\n","@import '../bootstrap.scss';\n\n.col {\n  box-sizing: border-box;\n  display: flex;\n  flex: 0 0 100%;\n  flex-direction: column;\n  max-width: 100%;\n  padding: 1rem .5rem 0 .5rem;\n\n  @include variant('no-gutters') {\n    padding: 0;\n  }\n\n  @include variant('align-top') {\n    align-self: flex-start;\n  }\n\n  @include variant('align-center') {\n    align-self: center;\n  }\n\n  @include variant('align-bottom') {\n    align-self: flex-end;\n  }\n\n  @include variant('first') {\n    order: -1;\n  }\n\n  @include variant('last') {\n    order: 1;\n  }\n\n  @include variant('reset') {\n    order: 0;\n  }\n\n  @include variant('flex') {\n    display: flex;\n  }\n}\n\n@include make-columns($breakpoints, $columns);\n","// Will make the column helpers.\n@mixin make-column-helpers($breakpoint) {\n  .col {\n    @include variant($breakpoint + '-no-gutters') {\n      padding: 0;\n    }\n    @include variant($breakpoint + '-align-top') {\n      align-self: flex-start;\n    }\n    @include variant($breakpoint + '-align-center') {\n      align-self: center;\n    }\n    @include variant($breakpoint + '-align-bottom') {\n      align-self: flex-end;\n    }\n    @include variant($breakpoint + '-first') {\n      order: -1;\n    }\n    @include variant($breakpoint + '-last') {\n      order: 1;\n    }\n    @include variant($breakpoint + '-reset') {\n      order: 0;\n    }\n    @include variant($breakpoint + '-flex') {\n      display: flex;\n    }\n  }\n}\n\n// Will make the default column.\n@mixin make-default-column($breakpoint) {\n  .col {\n    @include variant($breakpoint) {\n      flex-grow: 1;\n      flex-basis: 0;\n      max-width: 100%;\n    }\n  }\n}\n\n// Will make a single column\n@mixin make-responsive-column($breakpoint, $column, $width) {\n  .col {\n    @include variant($breakpoint + '-' + $column) {\n      flex: 0 0 ($width);\n    }\n  }\n}\n\n// Will make the columns.\n@mixin make-responsive-columns($columns, $breakpoint) {\n  @for $column from 0 through $columns {\n    $width: 0;\n\n    @if ($column != 0) {\n      $width: 100 / $columns * $column#{'%'};\n    }\n\n    @include make-responsive-column($breakpoint, $column, $width);\n  }\n}\n\n// Will make a single offset\n@mixin make-offset-column($breakpoint, $column, $margin) {\n  .col {\n    @include variant($breakpoint + '-offset-' + $column) {\n      margin-left: ($margin);\n    }\n  }\n}\n\n// Will make the offsets.\n@mixin make-offset-columns($columns, $breakpoint) {\n  @for $column from 0 through $columns {\n    $offset: 0;\n\n    @if ($column != 0) {\n      $offset: 100 / $columns * $column#{'%'};\n    }\n\n    @include make-offset-column($breakpoint, $column, $offset);\n  }\n}\n\n// Will make a single grid column\n@mixin make-column($breakpoint, $columns) {\n  @include make-column-helpers($breakpoint);\n  @include make-default-column($breakpoint);\n  @include make-responsive-columns($columns, $breakpoint);\n  @include make-offset-columns($columns, $breakpoint);\n}\n\n// Will make the grid columns\n@mixin make-columns($breakpoints, $columns) {\n  @each $breakpoint, $width in $breakpoints {\n    @if ($width == 0) {\n      @include make-column($breakpoint, $columns);\n    } @else {\n      @media (min-width: $width) {\n        @include make-column($breakpoint, $columns);\n      }\n    }\n  }\n}\n","@import '../bootstrap.scss';\n\n.text {\n  @include variant('left') {\n    text-align: left;\n  }\n\n  @include variant('right') {\n    text-align: right;\n  }\n\n  @include variant('center') {\n    text-align: center;\n  }\n}\n\n@include make-text($breakpoints);\n","// Will make a single text item.\n@mixin make-single-text($breakpoint) {\n  .text {\n    @include variant($breakpoint + '-right') {\n      text-align: right;\n    }\n\n    @include variant($breakpoint + '-left') {\n      text-align: left;\n    }\n\n    @include variant($breakpoint + '-center') {\n      text-align: center;\n    }\n  }\n}\n\n// Will make the text.\n@mixin make-text($breakpoints) {\n  @each $breakpoint, $width in $breakpoints {\n    @if ($width == 0) {\n      @include make-single-text($breakpoint);\n    } @else {\n      @media (min-width: $width) {\n        @include make-single-text($breakpoint);\n      }\n    }\n  }\n}\n"]}